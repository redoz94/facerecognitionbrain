{"ast":null,"code":"var _jsxFileName = \"/Users/azfarbilal/Desktop/smart-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'e4d889e5119445fdb9c22795265e8d75'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 90,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost/3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState({\n              users: {\n                entries: count\n              }\n            });\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n\n      onRouteChange = route => {\n        if (route === 'signout') {\n          this.setState({\n            isSignedIn: false\n          });\n        } else if (route === 'home') {\n          this.setState({\n            isSignedIn: true\n          });\n        }\n\n        this.setState({\n          route: route\n        });\n      };\n\n      render();\n      const _this$state = this.state,\n            isSignedIn = _this$state.isSignedIn,\n            imageUrl = _this$state.imageUrl,\n            route = _this$state.route,\n            box = _this$state.box;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        className: \"particles\",\n        params: particlesOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), route === 'home' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        box: box,\n        imageUrl: imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })) : route === 'signin' ? React.createElement(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }) : React.createElement(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/azfarbilal/Desktop/smart-brain/src/App.js"],"names":["React","Component","Particles","Clarifai","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","users","catch","err","console","log","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\n\nconst app = new Clarifai.App({\n apiKey: 'e4d889e5119445fdb9c22795265e8d75'\n});\n\nconst particlesOptions = {\n                    particles: { \n                      number: {\n                        value: 90,\n                        density: {\n                          enable: true,\n                          value_area: 800\n                         }\n                        }\n}\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\nloadUser = (data) => {\n  this.setState({user: {\n     id: data.id,\n    name: data.name,\n    email: data.email,\n    entries: data.entries,\n    joined: data.joined\n  }})\n}\n\ncalculateFaceLocation= (data) => {\n  const clarifaiFace= data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image = document.getElementById('inputimage');\n  const width = Number(image.width);\n  const height = Number(image.height);\n  return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height),\n  }\n}\n\n\ndisplayFaceBox = (box) => {\n  this.setState({box: box});\n}\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value});\n  }\n\n\n\n onButtonSubmit = () => {\n  this.setState({imageUrl: this.state.input})\n  app.models\n  .predict(\n     Clarifai.FACE_DETECT_MODEL, \n     this.state.input)\n  .then(response => {\n    if (response) {\n      fetch('http://localhost/3000/image', {\n        method: 'put',\n        headers: { 'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          id: this.state.user.id\n        })\n      })\n      .then(response => response.json())\n      .then(count => {\n        this.setState({users: {\n          entries: count\n        }})\n      })\n    }\n    this.displayFaceBox(this.calculateFaceLocation(response))\n  })\n  .catch(err => console.log(err));\n \n\n onRouteChange = (route) => {\n  if (route === 'signout') {\n    this.setState({isSignedIn: false})\n  } else if (route === 'home') {\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route});\n }\n\n  render();\n    const { isSignedIn, imageUrl, route, box } = this.state;\n  return (\n    <div className=\"App\">\n    <Particles className='particles'\n                params={particlesOptions} \n                         />\n       <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n       {route === 'home'\n       ?<div>\n       <Logo />\n       <Rank />\n       <ImageLinkForm \n       onInputChange={this.onInputChange} \n       onButtonSubmit={this.onButtonSubmit}\n        />\n      <FaceRecognition box={box} imageUrl={imageUrl} />\n      </div>\n     : (\n        route === 'signin' \n        ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n        )\n       \n    }\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}